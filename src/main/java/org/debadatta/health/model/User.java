package org.debadatta.health.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@DynamoDBTable(tableName = "User")
public class User {

	@DynamoDBAutoGeneratedKey
	@DynamoDBHashKey(attributeName = "id")
	private String id;

	@DynamoDBAttribute(attributeName = "name")
	private String name;

	@DynamoDBAttribute(attributeName = "email")
	@NotNull(message = "Email can't be null")
	@Pattern(regexp = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$", message = "Invalid email format")
	private String email;

	@DynamoDBAttribute(attributeName = "password")
	@NotNull(message = "Password can't be null")
	@Size(min = 6, message = "Your Password must be at least 6 character long")
	@Pattern(regexp = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$", message = "Password must contain at least one letter, one number, and one special character")
	private String password;

	@DynamoDBAttribute(attributeName = "phone_no")
	@NotNull(message = "Mobile Number can't be null")
	@Pattern(regexp = "^[0-9]{10}$", message = "Mobile Number must be 10 digits")
	private String phone_no;

	@DynamoDBAttribute(attributeName = "role")
    private String role;

}